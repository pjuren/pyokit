before_install:
  - sudo apt-get update
install:
  - sudo apt-get install python-rpy2
  - pip install rpy2
  - pip install sphinx
  - pip install coveralls
  - pip install mock
language: python
script: python setup.py sdist; pip install --no-index dist/pyokit-?.?.?.tar.gz; coverage run --source=pyokit src/test.py
env:
  global:
    - secure: "gCIVQ/G/+OiTl4VOy2BVkkG6At29F5xng7AyqJmxWqbQeWssydWtS2fJXP9pie3jW3fMSWyaB3mwv+WVKq5mJiN92ONX8Yy5E8Vx3vRybXoKNGfP+r51vkt3lxI7CZ3dRNyWSlO5TxXYSPsBaZgeYnNqDH44IWeORkjZWgzIuCc="
after_success:
  - # push test coverage results to coveralls
  - coveralls debug
  - coveralls
  -
  - ## the following automatically builds the Sphinx
  - ## documentation and pushes it to the gh_pages branch
  -
  - # First, set up credentials using the environment variables
  - # GIT_NAME, GIT_EMAIL and GH_TOKEN. These were passed
  - # encrypted to travis and should have been decrypted
  - # using travis' private key before this script was run.
  - git config --global user.name "${GIT_NAME}"
  - git config --global user.email ${GIT_EMAIL}
  - #git config credential.helper "store --file=.git/credentials"
  - echo ${GIT_NAME}
  -
  - # now we make the directory for the docs and cd into it
  - mkdir Docs
  - cd Docs/
  -
  - # clone the whole repo again, but switch to gh_pages branch
  - git clone https://github.com/pjuren/pyokit .
  - git checkout gh-pages
  -
  - # go back up and build the documentation, pointing it towards
  - # that dir we just made
  - cd ../
  - make docs
  -
  - # cd into the docs dir and commit and push the new docs.
  - cd Docs
  - git add --all .
  - git commit -m "Auto-updating developer documentation"
  - git push --quiet https://${GH_TOKEN}@github.com/pjuren/pyokit gh-pages && echo "Pushed to updated documentation."
  -
